{"version":3,"sources":["appSetup/GlobalStyles.ts","reduxStore/accessToken/types.ts","reduxStore/tempDate/types.ts","reduxStore/groups/types.ts","reduxStore/index.ts","reduxStore/accessToken/reducer.ts","reduxStore/tempDate/reducer.ts","reduxStore/groups/reducer.ts","appSetup/ReduxState.tsx","components/ui/container/Container.tsx","components/ui/navbar/Navbar.tsx","components/ui/footer/styled.tsx","components/ui/footer/Footer.tsx","components/ui/switch/ToogleSwitch.tsx","components/ui/button/Button.tsx","components/ui/main/Main.tsx","components/ui/form/styled.tsx","components/ui/form/cardForm.tsx","components/ui/auth/loginForm/LoginForm.tsx","components/ui/Group/GroupCard/styled.tsx","components/ui/Group/GroupCard/GroupCard.tsx","components/ui/Lesson/LessonEditableCard/styled.tsx","components/ui/Lesson/LessonEditableCard/LessonEditableCard.tsx","components/ui/Lesson/LessonAdd/styled.tsx","components/ui/auth/registrationForm/registrationForm.tsx","components/pages/Auth/styled.tsx","hooks/useAccessToken.tsx","reduxStore/accessToken/actions.ts","server/AxiosFetcher.ts","server/CreateHttpClient.ts","server/fetchers/account/Login.ts","server/fetchers/account/Register.ts","server/fetchers/group/GetGroups.ts","server/fetchers/group/GetDetailed.ts","server/fetchers/scheduled/GetScheduled.ts","hooks/useServerQuery.ts","hooks/useServerMutation.ts","components/pages/Auth/AuthPage.tsx","components/pages/Schedule/GroupsPage/styled.tsx","components/ui/sceletons/Groups/styled.tsx","components/ui/sceletons/Groups/Groups.tsx","components/pages/Schedule/GroupsPage/GroupsPage.tsx","components/pages/Schedule/SchedulePage/styled.tsx","components/pages/Schedule/SchedulePage/SchedulePage.tsx","components/pages/Schedule/SheduleDay/styled.tsx","models/Lesson.tsx","components/pages/Schedule/SheduleDay/SheduleDay.tsx","components/ui/layout/AppCard/styled.tsx","components/ui/layout/AppCard/AppCard.tsx","components/pages/Account/AccountPage/AccountPage.tsx","appSetup/SecureRoute.tsx","appSetup/Router.tsx","themes/lightTheme.ts","themes/Colors.ts","themes/darkTheme.ts","appSetup/AppTheme.tsx","appSetup/QueryContext.tsx","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.js","index.tsx"],"names":["GlobalStyles","createGlobalStyle","UPDATE_TOKEN","UPDATE_TEMP","ADD_GROUP","rootReducer","combineReducers","token","state","localStorage","getItem","action","type","setItem","payload","temp","Date","group","filter","x","id","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReduxState","children","Container","maxWidth","Wrapper","styled","div","props","theme","colors","background","header","color","contrast","NavbarWrapper","LinkWrapper","LogoWrapper","Navbar","location","useLocation","MenuBook","currentRoute","pathname","route","Face","AccountCircle","Route","to","FooterLinks","footer","Footer","Box","display","justifyContent","alignItems","mt","textAlign","mb","href","StyledInput","input","ToogleSwitch","initValue","handleChange","useState","checked","setChecked","onChange","old","Button","variant","onClick","undefined","main","BodyWrapper","Main","FormCardBody","InputGroup","FormCard","LoginForm","onSubmit","error","useForm","register","handleSubmit","errors","Typography","align","style","TextField","name","inputRef","required","value","message","label","fullWidth","login","helperText","password","GroupCardContent","palette","layout","textColor","GroupCard","LessonItem","LessonCard","lesson","durationTime","time","setMinutes","getMinutes","duration","className","teacher","toLocaleTimeString","hour","minute","RegistrationForm","getValues","minLength","maxLength","validate","pass","repeatPassword","AuthPageContent","useAccessToken","useSelector","dispatch","useDispatch","setToken","newToken","SetToken","AxiosFetcher","fetchFunc","auth","httpClient","canceller","Fetch","client","canceler","cancellation","axios","CancelToken","c","create","baseURL","process","cancelToken","withCredentials","headers","CreateHttpClient","this","request","a","data","Login","post","Register","GetGroups","get","GetDetailedGroup","GetScheduled","groupId","startDate","useServerQuery","queryName","fetchFunction","args","current","useRef","useQuery","answer","succeeded","Error","errorMessage","useServerMutation","useMutation","LoginPage","isLogin","setIsLogin","mutate","loginData","loginError","registerData","registerError","SwitchTransition","CSSTransition","addEndListener","node","done","addEventListener","classNames","username","marginTop","Divider","FormControlLabel","control","Switch","_","inputProps","GroupPageContent","GroupsSceletonContent","GroupSceletonCard","GroupsSceleton","count","cards","i","push","GroupsPage","isFetching","map","el","ShedulePageLink","Link","SchedulePage","useParams","Number","toShow","tasks","task","date","length","LessonField","Lesson","SheduleDayPage","pageParms","day","lessonItem","idx","subjectName","durationInMinutes","AppCardBody","AppCard","AccountPage","Secure","validation","redirect","String","AppRoutes","path","exact","appValidation","tokenToCheck","loginValidation","ApplicationSecure","LoginSecure","lightTheme","secondary","calcDarkInRgba","opacity","linkColor","100","900","darkTheme","InputWrapper","cookieName","lightCooked","Cookies","AppTheme","currentTheme","setCurrentTheme","set","MUiTheme","useTheme","adaptedTheme","createMuiTheme","primary","contrastText","QueryClient","QueryContext","QueryClientProvider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","origin","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.28bdec19.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    body, html, #root, #app {\r\n        margin: 0;\r\n        padding: 0;\r\n\r\n        height: 100%;\r\n        font-family: 'Roboto', sans-serif;\r\n    }\r\n\r\n    #app {\r\n        display: grid;\r\n\r\n        grid-template-rows: 100px 1fr 200px;\r\n    }\r\n\r\n    #app:first-child {\r\n        grid-row-start: 1; \r\n    }\r\n\r\n    #app:nth-child(2) {\r\n        grid-row-start: 2;\r\n    }\r\n\r\n    #app:last-child {\r\n        grid-row-start: 3;\r\n    }\r\n\r\n    a{\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    a:visited {\r\n        color: currentColor;\r\n    }\r\n\r\n\r\n    /* prepared animations*/\r\n    .fade-enter{\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n    }\r\n    .fade-exit{\r\n        opacity: 1;\r\n        transform: translateX(0);\r\n    }\r\n    .fade-enter-active{\r\n        opacity: 1;\r\n        opacity: 1;\r\n        transform: translateX(0);\r\n    }\r\n    .fade-exit-active{\r\n        opacity: 0;\r\n        opacity: 0;\r\n        transform: translateX(-100%);\r\n    }\r\n    .fade-enter-active,\r\n    .fade-exit-active{\r\n        transition: opacity 0.3s, transform 0.3s;\r\n    }\r\n`;\r\n","export const UPDATE_TOKEN = 'UPDATE_TOKEN';\r\n\r\nexport type ActionType = {\r\n    type: string,\r\n    payload: string,\r\n}","export const UPDATE_TEMP = 'UPDATE_TEMP';\r\n\r\nexport type ActionType = {\r\n    type: string,\r\n    payload: Date,\r\n}","import { DetailedGroup } from \"../../server\";\r\n\r\nexport const ADD_GROUP = 'ADD_GROUP';\r\n\r\nexport type ActionType = {\r\n    type: string,\r\n    payload: DetailedGroup,\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { AccessTokenReducer } from './accessToken';\r\nimport { TempDateReducer } from './tempDate';\r\nimport { GroupsReducer } from './groups';\r\n\r\nconst rootReducer = combineReducers({\r\n    token: AccessTokenReducer,\r\n    temp: TempDateReducer,\r\n    group: GroupsReducer,\r\n});\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        }) :\r\n        compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport { rootReducer };\r\nexport type RootState = ReturnType<typeof rootReducer>;","import { UPDATE_TOKEN, ActionType } from './types';\r\n\r\nexport function AccessTokenReducer(state: string = localStorage.getItem('user_token') || \"\", action: ActionType) {\r\n    if (action.type === UPDATE_TOKEN) {\r\n        localStorage.setItem('user_token', action.payload);\r\n        return action.payload;\r\n    }\r\n\r\n    return state;\r\n}","import { UPDATE_TEMP, ActionType } from './types';\r\n\r\nexport function TempDateReducer(state: Date = new Date() , action: ActionType) {\r\n    if (action.type === UPDATE_TEMP) {\r\n        return action.payload;\r\n    }\r\n\r\n    return state;\r\n}","import { DetailedGroup } from '../../server';\r\nimport { ADD_GROUP, ActionType } from './types';\r\n\r\nexport function GroupsReducer(state: DetailedGroup[] = [] , action: ActionType) {\r\n    if (action.type === ADD_GROUP) {\r\n        return [...state.filter(x => x.id != action.payload.id), action.payload];\r\n    }\r\n\r\n    return state;\r\n}","import { FC } from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from \"../reduxStore\";\r\n\r\ntype ReduxStateProps = {\r\n    children: JSX.Element[]\r\n}\r\n\r\nexport const ReduxState: FC<ReduxStateProps> = ({\r\n    children,\r\n}: ReduxStateProps) => (\r\n    <Provider store={store}>\r\n        {children}\r\n    </Provider>\r\n)","import { FC, ReactElement } from 'react';\r\nimport { Container as MuiContainer } from '@material-ui/core';\r\n\r\ntype ContainerProps = {\r\n    children: ReactElement\r\n}\r\n\r\nexport const Container: FC<ContainerProps> = ({\r\n    children\r\n}: ContainerProps) => (\r\n    <MuiContainer maxWidth=\"lg\">\r\n        {children}\r\n    </MuiContainer>\r\n)","import { FC, ReactElement } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport {\r\n    Face,\r\n    AccountCircle,\r\n    MenuBook,\r\n} from '@material-ui/icons';\r\n\r\nimport { Container } from '../container';\r\n\r\ntype NavbarProps = {\r\n    children?: never\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    background: ${(props) => props.theme.colors.background.header.color};\r\n    color: ${(props) => props.theme.colors.background.header.contrast};\r\n\r\n    > * {\r\n        height: 100%;\r\n        > * {\r\n            height: 100%;\r\n        }\r\n    }\r\n`;\r\n\r\nconst NavbarWrapper = styled.div`\r\n    display: flex;\r\n    margin: auto 0;\r\n\r\n    > div {\r\n        display: flex;\r\n        gap: 0 15px;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst LinkWrapper = styled.div`\r\n    margin: auto 0;\r\n\r\n    > * {\r\n        color: ${(props) => props.theme.colors.background.header.contrast};\r\n        text-decoration: none;\r\n        display: flex;\r\n        text-align: center;\r\n\r\n        > * {\r\n            margin: auto 0;\r\n        }\r\n    }\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n    width: 80px;\r\n    svg {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nexport const Navbar: FC<NavbarProps> = () => {\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <Wrapper>\r\n            <Container>\r\n                <NavbarWrapper>\r\n                    <div>\r\n                        <LogoWrapper>\r\n                            <MenuBook />\r\n                        </LogoWrapper>\r\n\r\n                        <Route\r\n                            currentRoute={location.pathname}\r\n                            route=\"/groups\"\r\n                        >\r\n                            <>\r\n                                <Face /> <span>Группы</span>\r\n                            </>\r\n                        </Route>\r\n\r\n                        <Route\r\n                            currentRoute={location.pathname}\r\n                            route=\"/account\"\r\n                        >\r\n                            <>\r\n                                <AccountCircle /> <span>Аккаунт</span>\r\n                            </>\r\n                        </Route>\r\n\r\n                    </div>\r\n                </NavbarWrapper>\r\n            </Container>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\ntype RouteProps = {\r\n    children: ReactElement;\r\n    currentRoute: string;\r\n    route: string;\r\n}\r\n\r\nconst Route: FC<RouteProps> = ({\r\n    children,\r\n    currentRoute,\r\n    route\r\n}: RouteProps) => (\r\n    <LinkWrapper>\r\n        {currentRoute === route ? <div>{children}</div> : <Link to={route}> {children} </Link>}\r\n    </LinkWrapper>\r\n)","import styled from 'styled-components';\r\n\r\nexport const FooterLinks = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 0 50px;\r\n\r\n  @media (max-width: 420px) {\r\n    gap: 0 25px;\r\n  }\r\n`;","import { Box } from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\nimport styled from 'styled-components';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\n\r\nimport { Container } from '../container';\r\nimport { FooterLinks } from \"./styled\";\r\n\r\ntype FooterTypes = {\r\n    children?: never\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    background: ${(props) => props.theme.colors.background.footer.color};\r\n    color: ${(props) => props.theme.colors.background.footer.contrast};\r\n`;\r\n\r\nexport const Footer: FC<FooterTypes> = () => (\r\n    <Wrapper>\r\n        <Container>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={5}>\r\n                <div>\r\n                    Курсовая работа - \"Расписание орковское\"\r\n\r\n                    <Box textAlign=\"center\" mt={2} mb={2}>© Зиневич Ян 2021</Box>\r\n\r\n                    <FooterLinks>\r\n                        <a href=\"https://github.com/Yaniddze\"><GitHubIcon /></a>\r\n                        <a href=\"https://www.youtube.com/channel/UCSBSAK98S9VbQpEiZAVU8Bg\"><YouTubeIcon /></a>\r\n                        <a href=\"mailto:yanrus09@gmail.com\"><MailIcon /></a>\r\n                        <a href=\"https://twitter.com/Yaniddze\"><TwitterIcon /></a>\r\n                        <a href=\"https://t.me/Yaniddze\"><TelegramIcon /></a>\r\n                    </FooterLinks>\r\n                </div>\r\n            </Box>\r\n        </Container>\r\n    </Wrapper>\r\n)","import { FC, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n  position: relative;\r\n  width: 60px;\r\n  height: 30px;\r\n  -webkit-appearance: none;\r\n  background: #bbb;\r\n  border-radius: 15px;\r\n  box-shadow: 0 0 20px rgba(0,0,0,.2);\r\n  outline: none;\r\n  transition: all .2s ease;\r\n  \r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 20px;\r\n    transform: scale(1.2);\r\n    background: white;\r\n    left: 0;\r\n    transition: all .2s ease;\r\n  }\r\n  \r\n  &:checked:before {\r\n    left: 30px;\r\n  }\r\n`;\r\n\r\ntype PropTypes = {\r\n  children?: never;\r\n  initValue: boolean;\r\n  handleChange: () => void;\r\n}\r\n\r\nexport const ToogleSwitch: FC<PropTypes> = ({\r\n  initValue, handleChange,\r\n}: PropTypes) => {\r\n  const [checked, setChecked] = useState(initValue);\r\n\r\n  const handleClick = (): void => {\r\n    setChecked((old) => !old);\r\n    handleChange();\r\n  };\r\n\r\n  return (\r\n    <StyledInput\r\n      checked={checked}\r\n      type=\"checkbox\"\r\n      onChange={handleClick}\r\n    />\r\n  );\r\n};","import { FC } from \"react\";\r\n\r\nimport {\r\n    Button as MuiButton,\r\n} from '@material-ui/core';\r\n\r\ntype ButtonProps = {\r\n    children: string\r\n    variant?: 'text' | 'outlined' | 'contained'\r\n    color?: 'primary' | 'secondary'\r\n    onClick?: () => void\r\n}\r\n\r\nexport const Button: FC<ButtonProps> = ({\r\n    variant,\r\n    color,\r\n    onClick,\r\n    children,\r\n}) => (\r\n    <MuiButton\r\n        variant={variant === undefined ? \"contained\" : variant}\r\n        color={color === undefined ? \"primary\" : color}\r\n        onClick={onClick}\r\n    >\r\n        {children}\r\n    </MuiButton>\r\n)","import { FC, ReactElement } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nimport { Container } from \"../container\";\r\n\r\ntype MainProps = {\r\n    children: ReactElement\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    background: ${(props) => props.theme.colors.background.main.color};\r\n    color: ${(props) => props.theme.colors.background.main.contrast};\r\n`;\r\n\r\nconst BodyWrapper = styled.div`\r\n    border-radius: 20px;\r\n    height: 100%;\r\n    width: 100%;\r\n    margin: 10px 0;\r\n`;\r\n\r\nexport const Main: FC<MainProps> = ({\r\n    children\r\n}: MainProps) => (\r\n    <Wrapper>\r\n        <Container>\r\n            <BodyWrapper>\r\n                {children}\r\n            </BodyWrapper>\r\n        </Container>\r\n    </Wrapper>\r\n)","import styled from 'styled-components';\r\n\r\nexport const FormCardBody = styled.div`\r\n  border-radius: 6px;\r\n  background-color: #819ca9;\r\n\r\n  padding: 16px;\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  margin: 15px 0;\r\n`;","import React from 'react';\r\nimport { FormCardBody } from './styled';\r\n\r\ntype FormCardProps = {}\r\n\r\nexport const FormCard: React.FC<FormCardProps> = (props) => {\r\n return (\r\n  <FormCardBody>\r\n    {props.children}\r\n  </FormCardBody>\r\n );\r\n};","import { FC } from \"react\";\r\nimport { useForm } from 'react-hook-form'\r\nimport {\r\n    TextField, Typography,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Button,\r\n} from '../../button';\r\nimport { FormCard } from \"../../form\";\r\nimport { InputGroup } from \"../../form/styled\";\r\n\r\nexport type LoginFormType = {\r\n    login: string\r\n    password: string\r\n}\r\n\r\ntype LoginFormProps = {\r\n    children?: never\r\n    onSubmit: (data: LoginFormType) => void\r\n    error: string\r\n}\r\n\r\nexport const LoginForm: FC<LoginFormProps> = ({\r\n    onSubmit, error\r\n}: LoginFormProps) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        errors\r\n    } = useForm<LoginFormType>();\r\n\r\n    return (\r\n        <FormCard>\r\n            <Typography  align=\"center\" variant=\"h4\">\r\n                Вход\r\n            </Typography>\r\n\r\n            <div>\r\n                <div style={{ color: 'red' }}>\r\n                    {error}\r\n                </div>\r\n                <InputGroup>\r\n                    <TextField\r\n                        name=\"login\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'Это поле обязательно'\r\n                            }\r\n                        })}\r\n                        label=\"Логин\"\r\n                        fullWidth\r\n                        error={!!errors.login}\r\n                        helperText={errors.login?.message}\r\n                    />\r\n                </InputGroup>\r\n\r\n                <InputGroup>\r\n                    <TextField\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        inputRef={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'Это поле обязательно'\r\n                            }\r\n                        })}\r\n                        label=\"пароль\"\r\n                        fullWidth\r\n                        error={!!errors.password}\r\n                        helperText={errors.password?.message}\r\n                    />\r\n                </InputGroup>\r\n            </div>\r\n            <div>\r\n                <Button onClick={handleSubmit(onSubmit)} color=\"primary\">\r\n                    Войти\r\n                </Button>\r\n            </div>\r\n        </FormCard>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nexport const GroupCardContent = styled.div`\r\n  background-color: ${(props) => props.theme.colors.palette.layout.main.color};\r\n  color: ${(props) => props.theme.colors.palette.layout.main.textColor};\r\n\r\n  border-radius: 6px;\r\n  padding: 16px;\r\n  box-shadow: 0 0 5px 0 #000;\r\n\r\n  cursor: pointer;\r\n  transition: box-shadow 0.3s;\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 15px 2px #111;\r\n  }\r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Group } from '../../../../models/Group';\r\nimport { GroupCardContent } from './styled';\r\n\r\n\r\ntype GroupCardProps = {\r\n  group: Group\r\n  to: string\r\n}\r\n\r\nexport const GroupCard: React.FC<GroupCardProps> = ({\r\n  group,\r\n  to\r\n}) => {\r\n\r\n  return (\r\n    <Link to={to}>\r\n      <GroupCardContent>\r\n        <h3>{group.name}</h3>\r\n      </GroupCardContent>\r\n    </Link>\r\n  );\r\n};","import styled from 'styled-components';\r\n\r\nexport const LessonItem = styled.div`\r\n  background-color: ${(props) => props.theme.colors.palette.layout.main.color};\r\n  color: ${(props) => props.theme.colors.palette.layout.main.textColor};\r\n  border-bottom: 2px solid ${(props) => props.theme.colors.main.color};\r\n\r\n  border-radius: 8px;\r\n  padding: 8px;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  .lesson-info {\r\n    display: inline-block;\r\n    padding: 8px;\r\n    background-color: ${(props) => props.theme.colors.palette.layout.main.textColor};\r\n    font-weight: bold;\r\n    color: #333;\r\n    border-radius: 8px;\r\n    box-shadow: 0 0 6px #333;\r\n\r\n    span:not(:last-child) {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n\r\n  .delete-icon {\r\n    color: #d46087;\r\n    stroke: black;\r\n  }\r\n`;","import React from 'react';\r\nimport { Lesson } from '../../../../models/Lesson';\r\nimport { LessonItem } from './styled';\r\n\r\ntype LessonEditableCardProps = {\r\n  lesson: Lesson\r\n}\r\n\r\nexport const LessonCard: React.FC<LessonEditableCardProps> = ({\r\n  lesson,\r\n}) => {\r\n\r\n  const durationTime = new Date(lesson.time);\r\n\r\n  durationTime.setMinutes(durationTime.getMinutes() + lesson.duration);\r\n\r\n  return (\r\n    <LessonItem>\r\n      <div>\r\n        <h3>{lesson.name}</h3>\r\n        <div className=\"lesson-info\">\r\n          <span>{lesson.teacher}</span>\r\n          <span>{lesson.time.toLocaleTimeString('ru-RU', {\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n          })} - {durationTime.toLocaleTimeString('ru-RU', {\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n          })}</span>\r\n        </div>\r\n      </div>\r\n    </LessonItem>\r\n  );\r\n};","import styled from 'styled-components';\r\n\r\nexport const LessonAddContent = styled.div`\r\n  .lesson-add {\r\n    position: relative;\r\n    padding: 12px;\r\n    border-radius: 8px;\r\n    border: 3px solid #fff;\r\n    margin-top: 15px;\r\n    box-shadow: 0 0 8px 0 #333;\r\n    transition: box-shadow 0.3s;\r\n    overflow: hidden;\r\n    padding-bottom: 60px;\r\n\r\n    &:hover {\r\n      box-shadow: 0 0 8px 3px #333;\r\n    }\r\n  }\r\n\r\n  .lesson-add__info {\r\n    display: flex;\r\n    gap: 10px 15px;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .lesson-add-button {\r\n    z-index: 1;\r\n    text-align: center;\r\n    position: absolute;\r\n    height: 100%;\r\n    width: 100%;\r\n    left: 0;\r\n    top: 0; \r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #eee;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    transition: top 0.3s;\r\n  }\r\n\r\n  .lesson-add.edit .lesson-add-button {\r\n    top: calc(100% - 45px);\r\n    align-items: flex-start;\r\n\r\n    svg {\r\n      transform: rotateZ(45deg);\r\n      transition: transform 0.3s;\r\n    }\r\n  }\r\n`;","import { Button, TextField, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { FormCard } from '../../form';\r\nimport { InputGroup } from '../../form/styled';\r\n\r\nexport type RegistrationFormType = {\r\n  login: string\r\n  password: string\r\n  repeatPassword: string\r\n}\r\n\r\ntype RegistrationFormProps = {\r\n  children?: never\r\n  onSubmit: (data: RegistrationFormType) => void\r\n  error: string\r\n}\r\n\r\nexport const RegistrationForm: React.FC<RegistrationFormProps> = ({\r\n  onSubmit, error\r\n}) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    getValues,\r\n  } = useForm<RegistrationFormType>();\r\n\r\n  return (\r\n    <FormCard>\r\n      <Typography align=\"center\" variant=\"h4\">\r\n        Регистрация\r\n      </Typography>\r\n\r\n      <div style={{ color: 'red' }}>\r\n          {error}\r\n      </div>\r\n\r\n      <InputGroup>\r\n        <TextField\r\n          name=\"login\"\r\n          inputRef={register({\r\n            required: {\r\n              value: true,\r\n              message: 'Это поле обязательно'\r\n            },\r\n            minLength: {\r\n              value: 4,\r\n              message: 'Минимальная длинна поля - 4 символа'\r\n            },\r\n            maxLength: {\r\n              value: 20,\r\n              message: 'Максимальная длинна поля - 20 символов'\r\n            },\r\n          })}\r\n          label=\"Логин\"\r\n          fullWidth\r\n          error={!!errors.login}\r\n          helperText={errors.login?.message}\r\n        />\r\n      </InputGroup>\r\n\r\n      <InputGroup>\r\n        <TextField\r\n          name=\"password\"\r\n          type=\"password\"\r\n          inputRef={register({\r\n            required: {\r\n              value: true,\r\n              message: 'Это поле обязательно'\r\n            },\r\n            minLength: {\r\n              value: 4,\r\n              message: 'Минимальная длинна поля - 4 символа'\r\n            },\r\n            maxLength: {\r\n              value: 20,\r\n              message: 'Максимальная длинна поля - 20 символов'\r\n            },\r\n          })}\r\n          label=\"пароль\"\r\n          fullWidth\r\n          error={!!errors.password}\r\n          helperText={errors.password?.message}\r\n        />\r\n      </InputGroup>\r\n\r\n      <InputGroup>\r\n        <TextField\r\n          name=\"repeatPassword\"\r\n          type=\"password\"\r\n          inputRef={register({\r\n            required: {\r\n              value: true,\r\n              message: 'Это поле обязательно'\r\n            },\r\n            validate: (pass: string) => getValues().password === pass ? true : 'Пароли должны совпадать',\r\n          })}\r\n          label=\"Повторите пароль\"\r\n          fullWidth\r\n          error={!!errors.repeatPassword}\r\n          helperText={errors.repeatPassword?.message}\r\n        />\r\n      </InputGroup>\r\n\r\n      <div>\r\n        <Button onClick={handleSubmit(onSubmit)} color=\"primary\" variant=\"contained\">\r\n          Зарегистрироваться\r\n        </Button>\r\n      </div>\r\n    </FormCard>\r\n  );\r\n};","import styled from 'styled-components';\r\n\r\nexport const AuthPageContent = styled.div`\r\n  max-width: 550px;\r\n  margin: 0 auto;\r\n  padding: 8px;\r\n\r\n  background-color: #cfd8dc;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 6px 0 #000;\r\n\r\n  .auth-page__toggler {\r\n    color: #263238;\r\n  }\r\n`;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../reduxStore';\r\n\r\nimport { SetToken } from '../reduxStore/accessToken';\r\n\r\nexport const useAccessToken = () => {\r\n  const token = useSelector((x: RootState) => x.token);\r\n  const dispatch = useDispatch();\r\n\r\n  const setToken = (newToken: string) => {\r\n    dispatch(SetToken(newToken));\r\n  }\r\n\r\n  return {\r\n    token,\r\n    setToken\r\n  };\r\n}","import { ActionType, UPDATE_TOKEN, } from \"./types\";\r\n\r\nexport function SetToken(token: string): ActionType {\r\n    return {\r\n        type: UPDATE_TOKEN,\r\n        payload: token,\r\n    }\r\n}","import { AxiosInstance, Canceler } from 'axios';\r\n\r\nimport { CreateHttpClient } from './CreateHttpClient';\r\nimport { StorageAnswer, FetchFunc } from './types';\r\n\r\nexport class AxiosFetcher<TRequest, TData> {\r\n  protected httpClient: AxiosInstance;\r\n\r\n  private canceller: Canceler | undefined;\r\n\r\n  constructor(fetchFunc: FetchFunc<TRequest, TData>, auth: string) {\r\n    const client = CreateHttpClient(auth);\r\n\r\n    this.httpClient = client.httpClient;\r\n    this.canceller = client.canceler;\r\n\r\n    this.Fetch = async (request: TRequest): Promise<StorageAnswer<TData>> => {\r\n      return (await fetchFunc(this.httpClient, request)).data;\r\n    };\r\n  }\r\n\r\n  Fetch: (request: TRequest) => Promise<StorageAnswer<TData>>;\r\n\r\n  Cancel(): void {\r\n    if (this.canceller !== undefined) {\r\n      this.canceller();\r\n    }\r\n  }\r\n}\r\n","import axios, { AxiosInstance, Canceler } from 'axios';\r\n\r\ntype ReturnType = {\r\n  httpClient: AxiosInstance;\r\n  canceler: Canceler | undefined;\r\n};\r\n\r\nexport function CreateHttpClient(auth: string): ReturnType {\r\n  let canceler: Canceler | undefined;\r\n\r\n  const cancellation = new axios.CancelToken((c: any) => {\r\n    canceler = c;\r\n  });\r\n\r\n  const httpClient = axios.create({\r\n    baseURL: process.env.REACT_APP_API_VERSION,\r\n    cancelToken: cancellation,\r\n    withCredentials: true,\r\n    headers: {\r\n      'Authorization': `Bearer ${auth}`,\r\n    }\r\n  });\r\n\r\n  return {\r\n    httpClient,\r\n    canceler,\r\n  };\r\n}\r\n","import { FetchFunc } from '../../types';\r\n\r\ntype Request = {\r\n  username: string,\r\n  password: string,\r\n}\r\n\r\ntype Response = {\r\n  token: string,\r\n};\r\n\r\nexport const Login: FetchFunc<Request, Response> = (client, request) =>\r\n  client.post('/account/login', request);\r\n","import { FetchFunc } from '../../types';\r\n\r\ntype Request = {\r\n  username: string,\r\n  password: string,\r\n}\r\n\r\ntype Response = {\r\n  token: string,\r\n};\r\n\r\nexport const Register: FetchFunc<Request, Response> = (client, request) =>\r\n  client.post('/account/register', request);","import { FetchFunc } from '../../types';\r\nimport { Group } from '../../../models';\r\n\r\nexport const GetGroups: FetchFunc<undefined, Group[]> = (client) =>\r\n  client.get('/group');\r\n","import { FetchFunc } from '../../types';\r\n\r\ntype Request = {\r\n    id: number\r\n}\r\n\r\nexport type DetailedGroup = {\r\n  id: number\r\n  owner: boolean\r\n  members: string[]\r\n  tasks: {\r\n    date: string\r\n    subjects: Subject[]\r\n  }[]\r\n};\r\n\r\nexport type Subject = {\r\n    id: number\r\n    startDate: string\r\n    durationInMinutes: number\r\n    subjectName: string\r\n    teacher: string\r\n}\r\n\r\nexport const GetDetailedGroup: FetchFunc<Request, DetailedGroup> = (client, request) =>\r\n  client.post('/group/detailed', request);\r\n","import { FetchFunc } from '../../types';\r\n\r\ntype Request = {\r\n    groupId: string\r\n    startDate: string\r\n}\r\n\r\ntype Response = {\r\n  id: number\r\n  startDate: string\r\n  durationInMinutes: number\r\n  subjectName: string\r\n  teacher: string\r\n}\r\n\r\nexport const GetScheduled: FetchFunc<Request, Response[]> = (client, request) =>\r\n  client.get(`/scheduled?groupId=${request.groupId}&date=${request.startDate}`);\r\n","import { useRef } from 'react';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport { FetchFunc } from '../server/types';\r\nimport { AxiosFetcher } from '../server';\r\n\r\nimport { useAccessToken } from './useAccessToken';\r\n\r\nexport function useServerQuery<TRequest, TData>\r\n  (\r\n    queryName: string,\r\n    fetchFunction: FetchFunc<TRequest, TData>,\r\n    args: TRequest\r\n)  {\r\n  const { token } = useAccessToken();\r\n  let { current } = useRef(new AxiosFetcher(fetchFunction, token));\r\n\r\n  return useQuery<TData, Error, TData>(queryName, async () => {\r\n    const answer = await current.Fetch(args);\r\n\r\n    if (!answer.succeeded) {\r\n      throw new Error(answer.errorMessage);\r\n    }\r\n\r\n    return answer.data;\r\n  });\r\n};\r\n","import { useRef } from 'react';\r\nimport { useMutation } from 'react-query';\r\n\r\nimport { FetchFunc } from '../server/types';\r\nimport { AxiosFetcher } from '../server';\r\n\r\nimport { useAccessToken } from './useAccessToken';\r\n\r\nexport function useServerMutation<TRequest, TData>\r\n  (\r\n    queryName: string,\r\n    fetchFunction: FetchFunc<TRequest, TData>\r\n)  {\r\n  const { token } = useAccessToken();\r\n  let { current } = useRef(new AxiosFetcher(fetchFunction, token));\r\n\r\n  return useMutation<TData, Error, TRequest>(queryName, async (args: TRequest) => {\r\n    const answer = await current.Fetch(args);\r\n\r\n    if (!answer.succeeded) {\r\n      throw new Error(answer.errorMessage);\r\n    }\r\n\r\n    return answer.data;\r\n  });\r\n};\r\n","import { Box, Divider, FormControlLabel, Switch } from \"@material-ui/core\";\r\nimport { FC, useState } from \"react\";\r\n\r\nimport { LoginForm, LoginFormType } from \"../../ui\";\r\nimport {\r\n  RegistrationForm,\r\n  RegistrationFormType,\r\n} from \"../../ui/auth/registrationForm\";\r\nimport { AuthPageContent } from \"./styled\";\r\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\r\n\r\nimport { useAccessToken, useServerMutation } from \"../../../hooks\";\r\n\r\nimport { Login, Register } from \"../../../server\";\r\n\r\nexport const LoginPage: FC = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  const { setToken } = useAccessToken();\r\n\r\n  const {\r\n    mutate: login,\r\n    data: loginData,\r\n    error: loginError,\r\n  } = useServerMutation(\"login\", Login);\r\n\r\n  const {\r\n    mutate: register,\r\n    data: registerData,\r\n    error: registerError,\r\n  } = useServerMutation(\"register\", Register);\r\n\r\n  if (loginData?.token) {\r\n    setToken(loginData.token);\r\n  }\r\n\r\n  if (registerData?.token) {\r\n    setToken(registerData.token);\r\n  }\r\n\r\n  const loginHandle = (data: LoginFormType) => {\r\n    login({\r\n      username: data.login,\r\n      password: data.password,\r\n    });\r\n  };\r\n\r\n  const registerHandle = (data: RegistrationFormType) => {\r\n    register({\r\n      username: data.login,\r\n      password: data.password,\r\n    });\r\n  };\r\n\r\n  const formToggleHandle = (\r\n    _: React.ChangeEvent<HTMLInputElement>,\r\n    isLogin: boolean\r\n  ) => {\r\n    setIsLogin(isLogin);\r\n  };\r\n\r\n  return (\r\n    <AuthPageContent>\r\n      <SwitchTransition>\r\n        <CSSTransition\r\n          key={isLogin ? \"login\" : \"registration\"}\r\n          addEndListener={(node, done) =>\r\n            node.addEventListener(\"transitionend\", done, false)\r\n          }\r\n          classNames='fade'\r\n        >\r\n          {isLogin ? (\r\n            <LoginForm\r\n              onSubmit={loginHandle}\r\n              error={loginError?.message || \"\"}\r\n            />\r\n          ) : (\r\n            <RegistrationForm\r\n              onSubmit={registerHandle}\r\n              error={registerError?.message || \"\"}\r\n            />\r\n          )}\r\n        </CSSTransition>\r\n      </SwitchTransition>\r\n      <Box marginTop={1} mb={1}>\r\n        <Divider />\r\n      </Box>\r\n\r\n      <div className='auth-page__toggler'>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={isLogin}\r\n              onChange={formToggleHandle}\r\n              name='checkedA'\r\n              inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n            />\r\n          }\r\n          label={isLogin ? \"Зарегистрироваться\" : \"Войти\"}\r\n        />\r\n      </div>\r\n    </AuthPageContent>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const GroupPageContent = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n  grid-auto-rows: 93px;\r\n  gap: 15px;\r\n\r\n  .--red-button {\r\n    background-color: #ffc107;\r\n\r\n    &:hover {\r\n      background-color: #ff8f00;\r\n    }\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const GroupsSceletonContent = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n  gap: 15px;\r\n`;\r\n\r\nexport const GroupSceletonCard = styled.div`\r\n  background: linear-gradient(-60deg, #bdbdbd 57%, #fff 60%, #bdbdbd 62%);\r\n  background-position: 0px;\r\n  border-radius: 6px;\r\n  height: 93px;\r\n  animation: GroupSceletonCard 0.5s infinite forwards linear;\r\n\r\n  &:hover {\r\n    background-position: 50%;\r\n  }\r\n\r\n  @keyframes GroupSceletonCard {\r\n    from{\r\n      background-position: 0px;\r\n    }\r\n    to{ \r\n      background-position: 150px;\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport { GroupSceletonCard, GroupsSceletonContent } from './styled';\r\n\r\ntype GroupsSceletonProps = {\r\n  count?: number\r\n}\r\n\r\nexport const GroupsSceleton: React.FC<GroupsSceletonProps> = ({\r\n  count = 8\r\n}) => {\r\n\r\n  const cards = [];\r\n  for(let i = 0; i < count; i++) {\r\n    cards.push(<GroupSceletonCard key={i} />);\r\n  }\r\n\r\n  return (\r\n    <GroupsSceletonContent>\r\n      {cards}\r\n    </GroupsSceletonContent>\r\n  );\r\n};","import React, { FC } from 'react';\r\nimport { GroupCard } from '../../../ui/Group';\r\nimport { GroupPageContent } from './styled';\r\nimport { GroupsSceleton } from '../../../ui/sceletons/Groups/Groups';\r\nimport { GetGroups } from '../../../../server';\r\nimport { useServerQuery } from '../../../../hooks';\r\n\r\nexport const GroupsPage: FC = () => {\r\n  const { data, isFetching } = useServerQuery('groups', GetGroups, undefined);\r\n\r\n  if (isFetching) return (\r\n    <GroupsSceleton count={6} />\r\n  );\r\n\r\n  return (\r\n    <GroupPageContent>\r\n      {data?.map((el) => <GroupCard to={`/schedule/${el.id}`} key={el.id} group={el} />)}\r\n    </GroupPageContent>\r\n  );\r\n};","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const ShedulePageLink = styled(Link)`\r\n  display: block;\r\n  background-color: ${(props) => props.theme.colors.palette.layout.main.color};\r\n  color: ${(props) => props.theme.colors.palette.layout.main.textColor};\r\n\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  margin: 10px 0;\r\n`;","import React, { FC } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { ShedulePageLink } from './styled';\r\n\r\nimport { useServerQuery } from '../../../../hooks';\r\nimport { GetDetailedGroup } from '../../../../server';\r\n\r\n// type\r\ntype SchedulePageParams = {\r\n  id: string\r\n}\r\n\r\nexport const SchedulePage: FC = () => {\r\n  const id = useParams<SchedulePageParams>().id;\r\n\r\n  const { data } = useServerQuery(`detailedGroup-${id}`, GetDetailedGroup, { id: Number(id) });\r\n\r\n  const toShow = data?.tasks.map(task => (\r\n    <ShedulePageLink to={`/schedule/${id}/${task.date}`} key={task.date}>\r\n      <h3>{task.date}</h3>\r\n    </ShedulePageLink>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      {toShow}\r\n      {toShow?.length === 0 ? 'Предметов нет' : ''}\r\n    </div>\r\n  );\r\n};","import styled from 'styled-components';\r\n\r\nexport const LessonField = styled.div`\r\n  background-color: ${(props) => props.theme.colors.palette.layout.main.color};\r\n  color: ${(props) => props.theme.colors.palette.layout.main.textColor};\r\n\r\n  border-radius: 8px;\r\n  padding: 8px;\r\n`;","export class Lesson {\r\n  time: Date = new Date();\r\n  teacher: string = '';\r\n  name: string = '';\r\n  duration: number = 90;\r\n  id: number = 0;\r\n\r\n  constructor(name: string, teacher: string, time: Date, duration: number, id: number) {\r\n    this.name = name;\r\n    this.teacher = teacher;\r\n    this.time = time;\r\n    this.duration = duration;\r\n    this.id = id;\r\n  }\r\n};\r\n\r\nexport type LessonAutoCompleate = {\r\n  name: string\r\n  id: number\r\n  teacherName: string\r\n}\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { LessonField } from './styled';\r\n\r\nimport { Lesson } from '../../../../models/Lesson';\r\nimport { LessonCard } from '../../../ui';\r\n\r\nimport { GetScheduled } from '../../../../server';\r\nimport { useServerQuery } from '../../../../hooks';\r\n\r\ntype SheduleDayParams = {\r\n  id: string\r\n  day: string\r\n}\r\n\r\nexport const SheduleDayPage: React.FC = (props) => {\r\n  const pageParms = useParams<SheduleDayParams>();\r\n  const id = pageParms.id;\r\n  const day = pageParms.day; // temp when data is temp\r\n\r\n  const { data } = useServerQuery(`schedule-${id}-${day}`, GetScheduled, {\r\n    startDate: day,\r\n    groupId: id,\r\n  });\r\n\r\n  return (\r\n    <LessonField>\r\n\r\n      {/* no lessons */}\r\n      {data?.length == 0 &&\r\n        <p>Занятий нет.</p>\r\n      }\r\n\r\n      {/* lessons cards */}\r\n      {data?.map((lessonItem, idx) => {\r\n        const lesson = new Lesson(\r\n          lessonItem.subjectName, \r\n          lessonItem.teacher, \r\n          new Date(lessonItem.startDate), \r\n          lessonItem.durationInMinutes, \r\n          lessonItem.id\r\n        );\r\n\r\n        return (\r\n          <LessonCard\r\n            key={idx}\r\n            lesson={lesson}\r\n          />\r\n        )}\r\n      )}\r\n\r\n    </LessonField>\r\n  );\r\n};","import styled from 'styled-components';\r\n\r\nexport const AppCardBody = styled.div`\r\n  background-color: ${(props) => props.theme.colors.palette.layout.main.color};\r\n  color: ${(props) => props.theme.colors.palette.layout.main.textColor};\r\n\r\n  border-radius: 6px;\r\n  padding: 16px;\r\n  box-shadow: 0 0 5px 0 #000;\r\n`;","import React from 'react';\r\nimport { AppCardBody } from './styled';\r\n\r\ntype AppCardProps = {}\r\n\r\nexport const AppCard: React.FC<AppCardProps> = ({\r\n  children\r\n}) => {\r\n return (\r\n  <AppCardBody>\r\n    {children}\r\n  </AppCardBody>\r\n );\r\n};","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { AppCard } from '../../../ui/layout';\r\n\r\nimport {\r\n  useAccessToken,\r\n} from '../../../../hooks';\r\n\r\ntype AccountPageProps = {}\r\n\r\nexport const AccountPage: React.FC<AccountPageProps> = (props) => {\r\n  const { setToken } = useAccessToken();\r\n\r\n  return (\r\n    <AppCard>\r\n      <h3>Аккаунт</h3>\r\n\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setToken('')}>\r\n        Выйти\r\n      </Button>\r\n    </AppCard>\r\n  );\r\n};","import { FC } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAccessToken } from \"../hooks\";\r\n\r\ntype Props = {\r\n  children: JSX.Element,\r\n  validation: (token: string) => boolean,\r\n  redirect?: string,\r\n}\r\n\r\nexport const Secure: FC<Props> = ({ children, validation, redirect }: Props) => {\r\n  const { token } = useAccessToken();\r\n  const validationResult = validation(token);\r\n\r\n  const validWay = validationResult ? children : <Redirect to={String(redirect)} />\r\n\r\n  return validWay;\r\n}","import { FC } from \"react\";\r\nimport { Switch, Redirect, Route } from 'react-router-dom';\r\n\r\nimport {\r\n  LoginPage, SchedulePage, SheduleDayPage, AccountPage\r\n} from '../components';\r\nimport { GroupsPage } from \"../components/pages/Schedule/GroupsPage\";\r\n\r\nimport {\r\n  Secure,\r\n} from './SecureRoute';\r\n\r\ntype AppRoutesPropTypes = {\r\n  children?: never;\r\n}\r\n\r\nexport const AppRoutes: FC<AppRoutesPropTypes> = () => (\r\n  <Switch>\r\n\r\n    {/* <Route path=\"/\" exact>\r\n      <ApplicationSecure>\r\n        <div>\r\n          main\r\n        </div>\r\n      </ApplicationSecure>\r\n    </Route> */}\r\n\r\n    <Route path=\"/schedule\" exact>\r\n      <ApplicationSecure>\r\n        <GroupsPage />\r\n      </ApplicationSecure>\r\n    </Route>\r\n\r\n    <Route path=\"/account\" exact>\r\n      <ApplicationSecure>\r\n        <AccountPage />\r\n      </ApplicationSecure>\r\n    </Route>\r\n    \r\n    <Route path=\"/login\" exact>\r\n      <LoginSecure>\r\n        <LoginPage />\r\n      </LoginSecure>\r\n    </Route>\r\n\r\n    <Route path=\"/schedule/:id\" exact>\r\n      <ApplicationSecure>\r\n        <SchedulePage />\r\n      </ApplicationSecure>\r\n    </Route>\r\n\r\n    <Route path=\"/schedule/:id/:day\" exact>\r\n      <ApplicationSecure>\r\n        <SheduleDayPage />\r\n      </ApplicationSecure>\r\n    </Route>\r\n\r\n\r\n    <Redirect to=\"/schedule\" />\r\n  </Switch>\r\n);\r\n\r\nexport const appValidation = (tokenToCheck: string) => tokenToCheck.length > 0;\r\nexport const loginValidation = (tokenToCheck: string) => tokenToCheck.length === 0;\r\n\r\ntype SecureProps = {\r\n  children: JSX.Element,\r\n}\r\n\r\nexport const ApplicationSecure: FC<SecureProps> = (props) => (\r\n  <Secure validation={appValidation} redirect=\"/login\">\r\n    {props.children}\r\n  </Secure>\r\n);\r\n\r\nexport const LoginSecure: FC<SecureProps> = (props) => (\r\n  <Secure validation={loginValidation} redirect=\"/\">\r\n    {props.children}\r\n  </Secure>\r\n);","import { DefaultTheme } from 'styled-components';\r\nimport { LightLeyoutPalleteColor } from './Colors';\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  colors: {\r\n    main: {\r\n      color: '#62E200',\r\n      contrast: '#000'\r\n    },\r\n    secondary: {\r\n      color: '#62AA2A',\r\n      contrast: '#000'\r\n    },\r\n    background: {\r\n      header: {\r\n        color: '#e1e3e6',\r\n        contrast: '#000'\r\n      },\r\n      footer: {\r\n        color: '#5c5c63',\r\n        contrast: '#FFF'\r\n      },\r\n      main: {\r\n        color: '#FFF',\r\n        contrast: '#000'\r\n      },\r\n    },\r\n    calcDarkInRgba: ((opacity: number): string => `rgba(64,147,0,${opacity})`),\r\n    error: {\r\n      color: '#f00',\r\n      contrast: '#000'\r\n    },\r\n    linkColor: {\r\n      color: '#000',\r\n      contrast: '#000'\r\n    },\r\n    palette: {\r\n      layout: LightLeyoutPalleteColor\r\n    }\r\n  },\r\n\r\n};","\r\nexport type Color = {\r\n  color: string\r\n  contrast: string\r\n}\r\n\r\n\r\nexport type ColorTile = {\r\n  color: string,\r\n  textColor: string,\r\n}\r\n\r\nexport type PalleteColor = {\r\n  contrast: ColorTile\r\n  main: ColorTile\r\n  [k: number]: ColorTile\r\n}\r\n\r\n\r\n\r\n// colors presets\r\nexport const DarkLeyoutPalleteColor: PalleteColor = {\r\n  contrast: {color: '#263238', textColor: '#fff'},\r\n  main: {color: '#78909c', textColor: '#fff'},\r\n  100: {color: '#cfd8dc', textColor: '#333'},\r\n  900: {color: '#263238', textColor: '#fff'}\r\n}\r\nexport const LightLeyoutPalleteColor: PalleteColor = {\r\n  contrast: {color: '#263238', textColor: '#fff'},\r\n  main: {color: '#78909c', textColor: '#fff'},\r\n  100: {color: '#cfd8dc', textColor: '#333'},\r\n  900: {color: '#263238', textColor: '#fff'}\r\n}","import { DefaultTheme } from 'styled-components';\r\nimport { DarkLeyoutPalleteColor } from './Colors';\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  colors: {\r\n    main: {\r\n      color: '#62E200',\r\n      contrast: '#000'\r\n    },\r\n    secondary: {\r\n      color: '#62AA2A',\r\n      contrast: '#000'\r\n    },\r\n    background: {\r\n      header: {\r\n        color: '#383b40',\r\n        contrast: '#FFF'\r\n      },\r\n      footer: {\r\n        color: '#010101',\r\n        contrast: '#FFF'\r\n      },\r\n      main: {\r\n        color: '#27292D',\r\n        contrast: '#FFF'\r\n      },\r\n    },\r\n    calcDarkInRgba: ((opacity: number): string => `rgba(64,147,0,${opacity})`),\r\n    error: {\r\n      color: '#f00',\r\n      contrast: '#000'\r\n    },\r\n    linkColor: {\r\n      color: '#000',\r\n      contrast: '#000'\r\n    },\r\n    palette: {\r\n      layout: DarkLeyoutPalleteColor\r\n    }\r\n  }\r\n};","// Core\r\nimport {\r\n    FC,\r\n    ReactElement,\r\n    useState,\r\n} from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport styled, {\r\n    DefaultTheme,\r\n    ThemeProvider,\r\n    useTheme,\r\n} from 'styled-components';\r\n\r\nimport {\r\n    createMuiTheme,\r\n    ThemeProvider as MThemeProvider,\r\n} from '@material-ui/core/styles';\r\n\r\n// Themes\r\nimport {\r\n    lightTheme,\r\n    darkTheme,\r\n} from '../themes';\r\n\r\nimport {\r\n    ToogleSwitch,\r\n} from '../components';\r\n\r\nconst InputWrapper = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    margin: 10px;\r\n`;\r\n\r\ntype PropTypes = {\r\n    children: ReactElement;\r\n}\r\n\r\nconst cookieName = 'Schedule.Theme';\r\n\r\nconst cookedTheme = Cookies.get(cookieName);\r\n\r\nconst lightCooked = cookedTheme === 'light';\r\n\r\nexport const AppTheme: FC<PropTypes> = ({ children }: PropTypes) => {\r\n    const [currentTheme, setCurrentTheme] = useState<DefaultTheme>(\r\n        lightCooked ? lightTheme : darkTheme,\r\n    );\r\n\r\n    const handleChange = (): void => {\r\n        setCurrentTheme((current) => {\r\n        if (current === lightTheme) {\r\n            Cookies.set(cookieName, 'dark');\r\n            return darkTheme;\r\n        }\r\n        Cookies.set(cookieName, 'light');\r\n        return lightTheme;\r\n        });\r\n    };\r\n\r\nreturn (\r\n        <>\r\n            <ThemeProvider theme={currentTheme}>\r\n                <MUiTheme>\r\n                    <InputWrapper>\r\n                        <ToogleSwitch\r\n                            initValue={!lightCooked}\r\n                            handleChange={handleChange}\r\n                        />\r\n                    </InputWrapper>\r\n\r\n                    {children}\r\n                </MUiTheme>\r\n            </ThemeProvider>\r\n        </>\r\n    );\r\n};\r\n\r\ntype MUiThemeProps = {\r\n    children: JSX.Element[],\r\n}\r\n\r\nconst MUiTheme: FC<MUiThemeProps> = ({\r\n    children,\r\n}: MUiThemeProps) => {\r\n    const currentTheme = useTheme();\r\n    const adaptedTheme = createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: currentTheme.colors.main.color,\r\n                contrastText: currentTheme.colors.main.contrast\r\n            },\r\n            secondary: {\r\n                main: currentTheme.colors.secondary.color,\r\n                contrastText: currentTheme.colors.secondary.contrast\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <MThemeProvider theme={adaptedTheme}>\r\n            {children}\r\n        </MThemeProvider>\r\n    )\r\n}","import { FC } from \"react\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\n\r\nconst client = new QueryClient();\r\n\r\nexport const QueryContext: FC = (props) => (\r\n    <QueryClientProvider client={client}>\r\n        {props.children}\r\n    </QueryClientProvider>\r\n) ","import { FC } from \"react\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport {\r\n  GlobalStyles,\r\n  ReduxState,\r\n  AppRoutes,\r\n  AppTheme,\r\n  QueryContext,\r\n} from './appSetup';\r\n\r\nimport {\r\n  Navbar,\r\n  Footer,\r\n  Main,\r\n} from './components';\r\n\r\nexport const App: FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <QueryContext>\r\n        <ReduxState>\r\n          <AppTheme>\r\n            <div id=\"app\"> \r\n              <Navbar />\r\n              <Main>\r\n                <AppRoutes />\r\n              </Main>\r\n              <Footer />\r\n            </div>\r\n          </AppTheme>\r\n          <GlobalStyles />\r\n        </ReduxState>\r\n      </QueryContext>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\nreportWebVitals();"],"sourceRoot":""}